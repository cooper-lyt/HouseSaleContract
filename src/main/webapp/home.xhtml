<!DOCTYPE composition PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:s="http://jboss.org/schema/seam/taglib"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:r="http://richfaces.org/rich"
                xmlns:f="http://xmlns.jcp.org/jsf/core"
                xmlns:a="http://richfaces.org/a4j"
                xmlns:c="http://xmlns.jcp.org/jsp/jstl/core"
                template="/layout/template-base.xhtml">

    <ui:define name="body">


        <a:outputPanel layout="block" style="padding: 10px" rendered="#{not identity.loggedIn}">

            <h:outputScript library="long-mai" name="mToken_K1.js"/>
            <h:outputScript library="long-mai" name="K1mTokenPlugin.js"/>
            <h:outputScript library="long-mai" name="base64.js"/>

            <h:outputScript>

                    //点击登录按钮时调用此函数方法
                    function OnKeyLogon() {

                        //获取页面文本框的密码
                        var userpin = document.getElementById("userpin").value;

                        if (userpin == "") {
                            alert("用户密码不能为空!");
                            return false;
                        }

                        //获取本Key的唯一硬件ID
                        K1mTokenFindDevice("#{r:clientId('uid')}");

                        var keyUID = #{r:element('uid')}.value;

                        //打开加密锁
                        var nRet = K1mToken.K1_mTokenOpen(keyUID, userpin);
                        if(nRet != 0)
                        {
                            alert("验证用户密码权限失败,错误码:" + K1mToken.K1_mTokenGetLastError());
                            return false;
                        }

                        //获取本Key的唯一硬件ID
                        K1mTokenFindDevice("#{r:clientId('uid')}");

                        //进行客户端摘要的计算
                        var randomMessageFromServer = "#{authenticationManager.encodeRndData}";
                        var randomStr = randomMessageFromServer;
                        //var keyUID = document.getElementById("uid").value;
                        var sha1Str = K1mToken.K1_mTokenSHA1WithSeed(keyUID, randomStr);
                        if(sha1Str == null || sha1Str == "")
                        {
                            alert("SHA1摘要生成失败,错误码:" + K1mToken.K1_mTokenGetLastError());
                            return false;
                        }

                        #{r:element('ClientDigest')}.value = sha1Str;

                        return true;
                    }


            </h:outputScript>

            <h:outputStylesheet>
                .auth-form {
                    width: 400px;
                    margin: 60px auto;
                }

                .auth-form-header {
                    position: relative;
                    padding: 10px 20px;
                    margin: 0;
                    color: #fff;
                    text-shadow: 0 -1px 0 rgba(0,0,0,0.3);
                    background-color: #829aa8;
                    border: 1px solid #768995;
                    border-radius: 3px 3px 0 0;
                }

                .auth-form-body {
                    padding: 20px;
                    font-size: 14px;
                    background-color: #fff;
                    border: 1px solid #d8dee2;
                    border-top: 0;
                    border-radius: 0 0 3px 3px;
                }

                .auth-form-header h1 {
                    margin-top: 0;
                    margin-bottom: 0;
                    font-size: 16px;
                }

                .auth-form-body .input-block {
                    margin-top: 5px;
                    margin-bottom: 15px;
                }
            </h:outputStylesheet>

            <div class="flash-messages container">
                <r:messages globalOnly="false"/>
            </div>

            <div role="main">
                <div class="auth-form">
                    <object id="mTokenPlugin" type="application/x-mtokenplugin" width="0" height="0">
                        <param value="pluginLoaded" />
                    </object>
                    <h:form >
                        <r:focus/>

                        <h:inputHidden id="uid" value="#{credentials.username}"/>
                        <h:inputHidden id="ClientDigest" value="#{credentials.password}"/>
                        <div class="auth-form-header">
                            <h1>#{messages.Welcome} ! #{messages.PleaseLoginHere}</h1>
                        </div>
                        <div class="auth-form-body">



                            <s:decorate styleClass="form-group" template="/layout/edit.xhtml">
                                <ui:define name="label">
                                    #{messages.login_password}
                                </ui:define>
                                <input type="text" class="form-control" id="userpin"/>
                            </s:decorate>



                            <h:commandButton id="loginButton" styleClass="btn btn-default" data-loading-text="#{messages.SigningIn}"
                                             value="#{messages.login}" action="#{identity.login}"
                                             onclick="if (OnKeyLogon()) {$(this).button('loading');} else {return false;}"/>


                        </div>
                    </h:form>
                    <h:outputScript>

                        initEditInput();


                    </h:outputScript>
                </div>
            </div>


        </a:outputPanel>



        <a:outputPanel layout="block" style="padding: 10px" rendered="#{identity.loggedIn}">



        </a:outputPanel>


    </ui:define>


</ui:composition>
