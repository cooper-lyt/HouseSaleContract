<!DOCTYPE composition PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:s="http://jboss.org/schema/seam/taglib"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:p="http://xmlns.jcp.org/jsf/passthrough"
                xmlns:a="http://richfaces.org/a4j" xmlns:r="http://richfaces.org/rich">

    <iframe style="display:none;" class="ext_iframe" src=""/>

    <h:outputScript>
        function extCall(printUrl) {
        $('.ext_iframe').attr('src', printUrl);
        }
    </h:outputScript>


    <h:outputStylesheet>
        .reading-bli.card-reading {
            color: #8a6d3b;!important;
        }

        .finger-read-btn{
            color: #d9534f;
        }

        .finger-read-btn.finger-readed{
            color: #5cb85c;
        }



    </h:outputStylesheet>




        <h:outputScript>



            function bindclick() {
            $('.card-read-btn').unbind('click')
            $('.card-read-btn').click(function () {

            if ($(this).hasClass('card-reading')) {



            $(this).removeClass('card-reading');

            extCall('ExtendsCer://');
            } else {


            $('.card-reading').removeClass('card-reading');
            $(this).addClass('card-reading');
            if (!$(this).hasClass('reading-bli')) {
            $(this).addClass('reading-bli');
            }
            extCall('ExtendsCer://' + $(this).attr('data-uuid'));


            }
            return false;
            });



            $('.finger-read-btn').unbind('click')
            $('.finger-read-btn').click(function () {

            if ($(this).hasClass('card-reading')) {



            $(this).removeClass('card-reading');

            extCall('ExtendsFinger://');
            } else {


            $('.card-reading').removeClass('card-reading');
            $(this).addClass('card-reading');
            if (!$(this).hasClass('reading-bli')) {
            $(this).addClass('reading-bli');
            }

            extCall('ExtendsFinger://' + $(this).attr('data-uuid')   + ' 0');


            }
            return false;
            });
                Holder.run({images:".person-img"})
            }

            $(document).ready(function(){
            $('.person-body').each(function () {
            var pid = $(this).find('.person-id').val();

            if (pid &amp;&amp; pid.trim() != ''){

            $(this).find('.person-img').attr('src','#{runParam.getParamValue('IMG_SERVER_ADDRESS')}/person/img/' + pid.trim());
            }
            });
                bindclick();



            });
        </h:outputScript>




    <h:outputScript>

        function dataPut(valStr,uuid){


        var card = (new Function("", "return " + valStr))();


        if(card.pushType &amp;&amp; card.pushType == 'finger'){
            $('.finger-read-btn').removeClass('card-reading');
            if (card.fingerCode){
                $('[data-finger-code="'+ uuid +'"]').val(card.fingerCode);
                $('[data-person-uuid="'+ uuid +'"]').find('.finger-read-btn').addClass('finger-readed');
            }

        }else {
        $('.card-read-btn').removeClass('card-reading');
        if (card.number){
        $('[data-person-uuid="'+ uuid +'"]').find(".person-name").val(card.name);
        $('[data-person-uuid="'+ uuid +'"]').find(".person-id").val(card.number);

        $('[data-person-uuid="'+ uuid +'"]').find(".person-img").attr('src','#{runParam.getParamValue('IMG_SERVER_ADDRESS')}/img/orig/' + card.img_fid);
        $('[data-person-uuid="'+ uuid +'"]').find(".person-addr").val(card.address);

        $('[data-person-uuid="'+ uuid +'"]').find(".person-brithday").val(card.dateOfBirth);

        $('[data-person-info="'+ uuid +'"]').val(valStr);

        $('[data-person-uuid="'+ uuid +'"]').find('.person-sex').selectpicker('val',card.sex);;


        }
        }

        }


        function readingBil() {
        $('.card-reading').each(function () {
        if ($(this).hasClass('reading-bli')) {

        $(this).removeClass('reading-bli');
        } else {

        $(this).addClass('reading-bli');
        }
        });
        }

        setInterval(readingBil, 500)
    </h:outputScript>

    <h:outputScript name="holder.min.js"/>
    </ui:composition>